{"version":3,"sources":["components/Burger/BurgerIngredient/burgerIngredient.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Layout/layout.module.css","Views/BurgerBuilder/burgerBuilder.module.css","components/Burger/Burger.module.css","components/Burger/BuildControls/BuildControls.module.css","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","Views/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Layout","props","className","classes","Navigation","Main","children","BurgerIngredient","ingredient","this","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Component","burger","transformedIngredients","Object","keys","ingredients","map","igKey","console","log","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","onClick","onRemoveIngredient","More","onAddIngredient","controls","buildControls","BuildControls","totalPrice","toFixed","ctrl","ingredientAdded","ingredientRemoved","INGREDIENTS_PRICES","salad","bacon","cheese","meat","BurgerBuilder","state","addIngredientHandler","updatedCount","updatedIngredients","priceAddition","newPrice","setState","removeIngredientHandler","oldCount","Content","App","Boolean","window","location","hostname","match","renderReactDom","ReactDOM","render","StrictMode","document","getElementById","cordova","addEventListener","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.08fd4a85.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"burgerIngredient_BreadBottom__3DHlH\",\"BreadTop\":\"burgerIngredient_BreadTop__219dg\",\"Seeds1\":\"burgerIngredient_Seeds1__CKBR3\",\"Seeds2\":\"burgerIngredient_Seeds2__2CS5i\",\"Meat\":\"burgerIngredient_Meat__2R1Y_\",\"Cheese\":\"burgerIngredient_Cheese__29zkK\",\"Salad\":\"burgerIngredient_Salad__1eVOj\",\"Bacon\":\"burgerIngredient_Bacon__372eB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navigation\":\"layout_Navigation__1HoZq\",\"Main\":\"layout_Main__2w6N5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"burgerBuilder_Content__3CST0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\"};","import React from \"react\";\nimport classes from \"./layout.module.css\";\n\nconst Layout = (props) => (\n  <>\n    <div className={classes.Navigation}> sidebar, and things</div>\n    <main className={classes.Main}>{props.children}</main>\n  </>\n);\nexport default Layout;\n","import React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\n\nimport classes from \"./burgerIngredient.module.css\";\n\nclass BurgerIngredient extends Component {\n    render() {\n        let ingredient = null;\n        switch (this.props.type) {\n            case('bread-bottom'): \n                ingredient = <div className={classes.BreadBottom}></div>\n                break;\n            case('bread-top'): \n                ingredient = (\n                    <div className={classes.BreadTop}>\n                        <div className={classes.Seeds1}></div>\n                        <div className={classes.Seeds2}></div>\n                    </div>)\n                break;\n            case('meat'): \n                ingredient = <div className={classes.Meat}></div>\n                break;\n            case('cheese'): \n                ingredient = <div className={classes.Cheese}></div>\n                break;\n            case('salad'): \n                ingredient = <div className={classes.Salad}></div>\n                break;\n            case('bacon'): \n                ingredient = <div className={classes.Bacon}></div>\n                break;\n            default: ingredient = null\n        }\n        return ingredient\n    }\n    \n};\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n  };\n\nexport default BurgerIngredient;\n","import React from 'react';\nimport classes from \"./Burger.module.css\";\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = (props) => {\n    let transformedIngredients = Object.keys(props.ingredients)\n        .map(igKey => {\n            console.log(igKey)\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\n                console.log(i, 'HALLO ')\n                return <BurgerIngredient key={igKey+ i} type={igKey} />\n            });\n        })\n        .reduce((arr, el) =>  {\n            return arr.concat(el)\n        }, [])\nif (transformedIngredients.length === 0 ) {\n    transformedIngredients = 'plz add ingredients'\n}\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients   }\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n};\n\nexport default burger;","import React from 'react';\nimport classes from './BuildControl.module.css';\n\nconst buildControl = (props) => {\n\n    return (\n        <div className={classes.BuildControl}>\n            <div className={classes.Label}>{props.label}</div>\n            <button className={classes.Less} onClick={props.onRemoveIngredient}>Less</button>\n            <button className={classes.More} onClick={props.onAddIngredient}>More</button>\n        </div>\n    );\n};\n\nexport default buildControl;","import React from 'react';\nimport classes from \"./BuildControls.module.css\";\nimport BuildControl from \"./BuildControl/BuildControl\";\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Meat', type: 'meat' },\n];\n\nconst buildControls = (props) => {\n    \n    return (\n        <div className={classes.BuildControls}>\n            <p>{props.totalPrice.toFixed(2)}</p>\n            {controls.map(ctrl => {\n                return <BuildControl \n                            key={ctrl.label} \n                            label={ctrl.label} \n                            onAddIngredient={() => props.ingredientAdded(ctrl.type)}\n                            onRemoveIngredient={() => props.ingredientRemoved(ctrl.type)}></BuildControl>\n            })}\n        </div>\n    );\n};\n\nexport default buildControls;","import React, {Component} from \"react\";\nimport classes from \"./burgerBuilder.module.css\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\n\nconst INGREDIENTS_PRICES = {\n      salad: 0.5, \n      bacon: 0.8,\n      cheese: 0.4,\n      meat: 2.5\n}\nclass BurgerBuilder extends Component {\n  \n  state = {\n    ingredients: {\n      salad: 0, \n      bacon: 0,\n      cheese: 0,\n      meat: 0\n    },\n    totalPrice: 4 \n  }\n  addIngredientHandler = (type)  => {\n    const oldCount = this.state.ingredients[type];\n    const updatedCount = oldCount + 1; \n    const updatedIngredients = {\n      ...this.state.ingredients   \n    };\n    updatedIngredients[type] = updatedCount;\n    const priceAddition = INGREDIENTS_PRICES[type];\n    const oldPrice = this.state.totalPrice\n    const newPrice = oldPrice + priceAddition;\n    this.setState({totalPrice: newPrice, ingredients: updatedIngredients})\n  }\n  removeIngredientHandler = (type)  => {\n    const oldCount = this.state.ingredients[type];\n    if(oldCount <= 0) {\n      return;\n    }\n    const updatedCount = oldCount - 1; \n    const updatedIngredients = {\n      ...this.state.ingredients  \n    };\n    updatedIngredients[type] = updatedCount;\n    const priceAddition = INGREDIENTS_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice - priceAddition;\n    this.setState({totalPrice: newPrice, ingredients: updatedIngredients})\n  }\n render() { \n  return (\n    <>\n      <Burger ingredients={this.state.ingredients}/>    \n      <BuildControls ingredientAdded={this.addIngredientHandler} \n        ingredientRemoved={this.removeIngredientHandler}\n        totalPrice={this.state.totalPrice}/>\n      <p className={classes.Content}></p>\n    </>\n  )\n}\n}\nexport default BurgerBuilder;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Layout from \"./components/Layout/Layout\";\nimport BurgerBuilder from \"./Views/BurgerBuilder/BurgerBuilder\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <BurgerBuilder></BurgerBuilder>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst renderReactDom = () => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\nif (window.cordova) {\n  document.addEventListener('deviceready', () => {\n    renderReactDom();\n  }, false);\n} else {\n  renderReactDom();\n}\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}